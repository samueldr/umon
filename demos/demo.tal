%varvara:debug { #01 .System/debug DEO }

|00 @System &vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1
|10 @Console &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1

%NL { 0a }
%SP { 20 }

%console:getc {
	.Console/read DEI
}

%console:putc {
	.Console/write DEO
}

|0100

@on-reset
	( Install our "bogus" console vector... )
	;console:echo .Console/vector DEO2
	( Directly start the monitor )
	( monitor:start )
	;line     puts
	;hello    puts
	;line     puts
	;info-mon puts
	( Put the first prompt up )
	;echo-prompt puts
	BRK

( NOTE: this toy "echo" will break to monitor on *any line ending on #*! )
@console:echo
	console:getc

	( echo chars )
	DUP           ( Keep a copy of the char )
	console:putc  ( Print char )

	( on newline )
	DUP LIT NL NEQ ?{
		( Check previous char )
		LIT "#
		LIT [ &previous $1 ]
		( When `#` ends the previous line, break into monitor )
		NEQ ?{
			#00 ,/previous STR ( Reset check )
			[
				( For visual inspection )
				LIT2  f00f ( Wf00f )
				LIT2r ace5 ( Race5 )
			]
			monitor:start      ( start monitor )
			[
				( For visual inspection )
				LIT NL console:putc
				( Check for balanced WST visually )
				LIT "W console:putc
				monitor:print-short
				LIT NL console:putc
				( Check for balanced RST visually )
				LIT "R console:putc
				STH2r monitor:print-short
				LIT NL console:putc
			]
			LIT NL console:putc
		}
		;echo-prompt puts
	}
	[ ,/previous STR ]         ( Save previous char )
	BRK

@line  "-------------------- NL 00
@hello "Hello SP "world! NL 00
@info-mon "Use SP "the SP "# SP "command SP "to SP "break SP "in SP "the SP "monitor. NL 00
@echo-prompt "echo@ SP 00

@puts ( str* -: )
	LDAk #18 DEO
	INC2 & LDAk ?puts
	POP2
	JMP2r

( A bogus routine at a well-known address to `g`o to. )
|2000
@bogus-routine-2000
	;/str puts
	varvara:debug
	;/str puts
	JMP2r
	&str "Bogus SP "routine... NL BRK

|3000
~monitor.tal
